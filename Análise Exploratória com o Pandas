Analise Exploratória


## Nesse estudo será abordado uma análise Exploratória do arquivo AdventureWorks, disponibilizado pela microsoft

#Importando a biblioteca
Import pandas as pd
Import matplotlib.pyplot as plt
plt.style.use(“seaborn”)    #Estilo de gráfico

#Upload do arquivo
from google.colab import files
arq = files.upload()

#Criando nosso DataFrame
df = pd.read_excel(“adventureWorks.xlsx”)

#Visualizando as 5 primeiras linhas
df.head()

#Quantidade de linhas e colunas
df.shape

#Verificando os tipos de dados
df.dtypes

#Qual a Receita total?
df["Valor venda"].sum()

#Qual o custo total?
df["custo"] = ["Custo Unitário"].mul(df["Quantidade"]) #Aqui se cria uma nova coluna com o valor do custo

#Qual o custo total?
round(df["custo"].sum(), 2)  #Aqui irá somar todos os valores dentro da coluna custo
# O round serve para arredondar, no caso foi em duas casas decimais

#Agora que temso a receita e o custo toal, podemos achar o Lucro Total
#Vamos criar uma coluna de Lucro que será Receita - Custo
df["lucro"] = df["Valor Venda"] - df["Data Venda"]

#Todal Lucro
round(df["lucro"].sum(),2)

#Criando um coluna com total de dias para enviar o produto
df["Tempo_envio"] = df["Data Envio"] - df["data Venda"]


## Agora, queremos saber a média do tempo de envio para cada Marca, e para isso precisamos transformar a coluna
#Tempo_envio em numérica

#Extraindo apenas os dias
df["Tempo_envio"] = (df["Data Envio"])- df["Data Venda"].dt.days

#Verificando o ripo da coluna Tempo_envio
df["Tempo_envio"].dtype

#Média de tempo de envio por Marca
df.groupby("Marca")["Tempo_envio"].mean()

##Missing Values

#Verificar se temos dados faltantes
df.isnull.sum()


#E, se a gente quiser saber o Lucro por Ano e Por Marca?

#Vamos agrupar por ano e marca
df.groupby([df["Data"].dt.year, "Marca"])["Lucro"].sum()

#Irá transformar  noTção cientifica em numeors fluatantes
pd.options.display.float_format = '{:20,.2f}'.format

#Resetando o index
Lucro_ano = df.groupby([df["Data Venda"].dt.year, "Marca"])["lucro"].sum().reset_index()
#Iá trasofrmar so resultados do tipo index e mostrar de forma colunar como em planilhas

#Qual o total de produtos vendidos
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=False)

#Gráfico total de produtos vendidos?
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=True).plot.barh(title = "Total produtos vendidos")
plt.xlabel("Total")
plt.ylabel("Produto");

#Gráfico de lucro por ano
df.groupby(df["Data Venda"].dt.year)["lucro"].sum().plot.bar(title ="Lucro x Ano")
plt.xlabel("Ano")
plt.ylabel("Receita");

#Selecionando apenas as vendas de 2009
df_2009 = df[df"data Venda"].dt.year == 2009]

#Gráfico de linhas com o mês e o lucro mo mês
df_2009.groupby(df_2009["Data Venda"].dt.month)["lucro"].sum().plot(title = "Lucro x Mês")
plt.xlabel("Mês")
plt.ylabel("Lucro");

#Gráfico de barras com as barras na horizontal
df_2009.groupby("Marca")["lucro"].sum().plot.bar(title = "Lucro x Marca")
plt.xlabel("Marca")
plt.ylabel("Lucro")
plt.xticks(rotation="horizontal");

#Gráfico de barra com lucro por classe
df_2009.groupby("Classe")["lucro"].sum().plot.bar(title = "Lucro x Classe")
plt.xlabel("Classe")
plt.ylabel("Lucro")
plt.xticks(rotation="horizontal");

#Criando gráficos com a coluna Tempo_envio
df["Tempo_envio"].describe()

#Gráfico de Boxplot
plt.boxplot(df["Tempo_envio"]);

#Histograma
plt.hist(df["Tempo_envio"]);

#Tempo mínimo de envio
df["Tempo_envio"].min()

#Tempo máximo de envio
df["Tempo_envio"].max()

#Identificando o Outlier
df[df["Tempo_envio"] == 20]
